// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TO.Prescricao.API.Data;

#nullable disable

namespace TO.Prescricao.API.Migrations
{
    [DbContext(typeof(PrescricaoContext))]
    [Migration("20240705055137_AdicionarQrCodeTabelaPrescricaoMedicamento")]
    partial class AdicionarQrCodeTabelaPrescricaoMedicamento
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TO.Prescricao.API.Model.PrescricaoMedicamento", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("IntervaloHoras")
                        .HasColumnType("int");

                    b.Property<Guid>("MedicamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("PrescricaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("QRCode")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrescricaoId");

                    b.ToTable("PrescricaoMedicamentos");
                });

            modelBuilder.Entity("TO.Prescricao.API.Model.PrescricaoPaciente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeMedico")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomePaciente")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("PrescricaoPaciente");
                });

            modelBuilder.Entity("TO.Prescricao.API.Model.PrescricaoMedicamento", b =>
                {
                    b.HasOne("TO.Prescricao.API.Model.PrescricaoPaciente", "PrescricaoPaciente")
                        .WithMany("Itens")
                        .HasForeignKey("PrescricaoId")
                        .IsRequired();

                    b.Navigation("PrescricaoPaciente");
                });

            modelBuilder.Entity("TO.Prescricao.API.Model.PrescricaoPaciente", b =>
                {
                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
